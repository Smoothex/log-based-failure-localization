// Configuration settings, which are irrelevant for analysis, but indicate which version these log entries come from

WARN  [main] <TIMESTAMP> CLibrary.<JAVA_ID> - Unable to lock JVM memory (ENOMEM). This can result in part of the JVM being swapped out, especially with mmapped I/O enabled. Increase RLIMIT_MEMLOCK or run Cassandra as root.
INFO  [main] <TIMESTAMP> StorageService.<JAVA_ID> - Cassandra version: 3.9
INFO  [main] <TIMESTAMP> StorageService.<JAVA_ID> - CQL supported versions: 3.4.2 (default: 3.4.2)
DEBUG [main] <TIMESTAMP> StorageService.<JAVA_ID> - Resetting gossip state after shadow round
INFO  [main] <TIMESTAMP> StorageService.<JAVA_ID> - Node /127.0.0.1 state jump to NORMAL
DEBUG [PendingRangeCalculator:<NUM>] <TIMESTAMP> PendingRangeCalculatorService.<JAVA_ID> - finished calculation for 2 keyspaces in <NUM>ms
INFO  [ReadStage-<NUM>] <TIMESTAMP> ApproximateTime.<JAVA_ID> - Scheduling approximate time-check task with a precision of 10 milliseconds

// Differences begin here

WARN  [MigrationStage:<NUM>] <TIMESTAMP> ColumnFamilyStore.<JAVA_ID> - Failed unregistering mbean: org.apache.cassandra.db:type=Tables,keyspace=k,table=materializedview
java.lang.NullPointerException: null
	at java.util.concurrent.ConcurrentHashMap.replaceNode(ConcurrentHashMap.<JAVA_ID>) ~[na:1.8.0_352]
	at java.util.concurrent.ConcurrentHashMap.remove(ConcurrentHashMap.<JAVA_ID>) ~[na:1.8.0_352]
	at java.util.concurrent.ConcurrentHashMap$KeySetView.remove(ConcurrentHashMap.<JAVA_ID>) ~[na:1.8.0_352]
	at org.apache.cassandra.metrics.TableMetrics.release(TableMetrics.<JAVA_ID>) ~[apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.db.ColumnFamilyStore.unregisterMBean(ColumnFamilyStore.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.db.ColumnFamilyStore.invalidate(ColumnFamilyStore.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.db.ColumnFamilyStore.invalidate(ColumnFamilyStore.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.db.Keyspace.unloadCf(Keyspace.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.db.Keyspace.dropCf(Keyspace.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.config.Schema.dropView(Schema.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.schema.SchemaKeyspace.lambda$mergeSchema$17(SchemaKeyspace.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at java.lang.Iterable.forEach(Iterable.<JAVA_ID>) ~[na:1.8.0_352]
	at org.apache.cassandra.schema.SchemaKeyspace.mergeSchema(SchemaKeyspace.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.schema.SchemaKeyspace.mergeSchemaAndAnnounceVersion(SchemaKeyspace.<JAVA_ID>) [apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.service.MigrationManager$1.runMayThrow(MigrationManager.<JAVA_ID>) ~[apache-cassandra-<VERSION>.jar:<VERSION>]
	at org.apache.cassandra.utils.WrappedRunnable.run(WrappedRunnable.<JAVA_ID>) ~[apache-cassandra-<VERSION>.jar:<VERSION>]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.<JAVA_ID>) ~[na:1.8.0_352]
	at java.util.concurrent.FutureTask.run(FutureTask.<JAVA_ID>) ~[na:1.8.0_352]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.<JAVA_ID>) ~[na:1.8.0_352]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.<JAVA_ID>) ~[na:1.8.0_352]
	at java.lang.Thread.run(Thread.<JAVA_ID>) ~[na:1.8.0_352]
